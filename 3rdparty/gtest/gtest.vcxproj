<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{30D99361-DD0D-3633-A88B-480B0E3FE3CC}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>gtest</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\C++\GitHub\infrastructure\3rdparty\gtest\Debug\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">gtest.dir\Debug\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">gtest</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\C++\GitHub\infrastructure\3rdparty\gtest\Release\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">gtest.dir\Release\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">gtest</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\C++\GitHub\infrastructure\3rdparty\gtest\MinSizeRel\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">gtest.dir\MinSizeRel\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">gtest</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\C++\GitHub\infrastructure\3rdparty\gtest\RelWithDebInfo\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">gtest.dir\RelWithDebInfo\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">gtest</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.lib</TargetExt>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_VARIADIC_MAX=10;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_VARIADIC_MAX=10;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions)  /machine:X86</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_VARIADIC_MAX=10;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_VARIADIC_MAX=10;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions)  /machine:X86</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_VARIADIC_MAX=10;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_VARIADIC_MAX=10;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions)  /machine:X86</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_VARIADIC_MAX=10;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_VARIADIC_MAX=10;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\C++\GitHub\infrastructure\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\include;C:\C++\GitHub\infrastructure\3rdparty\gtest\.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions)  /machine:X86</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/C++/GitHub/infrastructure -BC:/C++/GitHub/infrastructure --check-stamp-file C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeLists.txt;C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeLists.txt;C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/C++/GitHub/infrastructure -BC:/C++/GitHub/infrastructure --check-stamp-file C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeLists.txt;C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeLists.txt;C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/C++/GitHub/infrastructure -BC:/C++/GitHub/infrastructure --check-stamp-file C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeLists.txt;C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeLists.txt;C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/C++/GitHub/infrastructure -BC:/C++/GitHub/infrastructure --check-stamp-file C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/C++/GitHub/infrastructure/3rdparty/gtest/CMakeLists.txt;C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeLists.txt;C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\C++\GitHub\infrastructure\3rdparty\gtest\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest-death-test.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest-message.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest-param-test.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest-printers.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest-spi.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest-test-part.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest-typed-test.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest_pred_impl.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\gtest_prod.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\custom\gtest-port.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\custom\gtest-printers.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\custom\gtest.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-death-test-internal.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-filepath.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-internal.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-linked_ptr.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-param-util-generated.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-param-util.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-port-arch.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-port.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-string.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-tuple.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\include\gtest\internal\gtest-type-util.h" />
    <ClInclude Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest-internal-inl.h" />
    <ClCompile Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest-all.cc"  />
    <ClCompile Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest-death-test.cc"  />
    <ClCompile Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest-filepath.cc"  />
    <ClCompile Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest-port.cc"  />
    <ClCompile Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest-printers.cc"  />
    <ClCompile Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest-test-part.cc"  />
    <ClCompile Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest-typed-test.cc"  />
    <ClCompile Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest.cc"  />
    <ClCompile Include="C:\C++\GitHub\infrastructure\3rdparty\gtest\src\gtest_main.cc"  />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\C++\GitHub\infrastructure\ZERO_CHECK.vcxproj">
      <Project>B73B5026-DC62-36CE-AB6A-5FC1538AF827</Project>
      <Name>ZERO_CHECK</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>